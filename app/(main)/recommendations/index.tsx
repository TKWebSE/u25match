
/**
 * フォールバックファイル（Expo Routerのプラットフォーム自動解決のため必要）
 * 
 * 【重要】このファイルの役割について：
 * 
 * 1. プラットフォーム自動解決の仕組み
 *    - index.web.tsx が存在する場合 → Web版では index.web.tsx が実行される
 *    - index.native.tsx が存在する場合 → モバイル版では index.native.tsx が実行される
 *    - この index.tsx は、プラットフォーム別ファイルが存在しない場合の「フォールバック」として機能
 * 
 * 2. なぜこのファイルが必要なのか
 *    - Expo Routerは、プラットフォーム別ファイル（.web.tsx, .native.tsx）が存在する場合、
 *      必ずベースファイル（index.tsx）も存在することを要求する
 *    - これは、プラットフォーム別ファイルが読み込めない環境での安全性を確保するため
 * 
 * 3. このファイルに書いたロジックは無視される
 *    - プラットフォーム別ファイルが存在する場合、このファイルの内容は実行されない
 *    - そのため、ビジネスロジックやUIは index.web.tsx と index.native.tsx に書く必要がある
 *    - このファイルは「存在するだけ」で十分
 * 
 * 4. 実際の実装
 *    - ビジネスロジック: index.web.tsx と index.native.tsx の両方に記述
 *    - UI表示: プラットフォーム別に最適化された内容を各ファイルに記述
 *    - 状態管理: 各ファイル内で独立して管理
 * 
 * 5. 出し分け確認用ログ
 *    - 各プラットフォーム別ファイルには、出し分け確認用のログが含まれている
 *    - モバイル版: 📱 アイコンで識別
 *    - Web版: 🌐 アイコンで識別
 *    - フォールバック: ⚠️ アイコンで識別（予期しない動作）
 */

export default function Placeholder() {
  // 出し分け確認用ログ
  console.log('⚠️ フォールバックファイル index.tsx が実行されています！');
  console.log('⚠️ これは予期しない動作です。プラットフォーム別ファイルが正しく認識されていません。');
  console.log('⚠️ 期待される動作: index.web.tsx または index.native.tsx が実行されること');

  // この関数は実行されません（プラットフォーム別ファイルが存在するため）
  // ただし、Expo Routerの要件を満たすために必要
  return null;
}

